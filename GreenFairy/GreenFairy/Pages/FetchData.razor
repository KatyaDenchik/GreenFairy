@page "/fetchdata"
@attribute [Authorize(Roles = "Admin")]
@inject EntityService entityService
@inject Repository repo
@inject DataBaseView dataBaseView;
<PageTitle>Information</PageTitle>
@using GreenFairy.Data
@using GreenFairy.DomainLayer.DataBase.Entities.Abstract
@using GreenFairy.ViewModels
@using GreenFairy.DomainLayer.DataBase
@using GreenFairy.DomainLayer.DataBase.Entities

<h1>Information</h1>

<div>
    <select name="entities" id="entities" @bind="@dataBaseView.TabelName">

        @foreach (var type in dataBaseView.EntityTypes)
        {
            <option value="@type.Name">@type.Name</option>
        }

    </select>
</div>

@if (entities == null)
{
    <div class="col-md-4 p-3">
        <RadzenCard>
            <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">Завантаження</RadzenText>
            <RadzenProgressBar Value="100" ShowValue="false" Mode="ProgressBarMode.Indeterminate" />
        </RadzenCard>
    </div>
}
else
{
    <RadzenDataGrid @ref=ordersGrid AllowFiltering="true" AllowRowSelectOnRowClick="true" AllowColumnResize="true" AllowColumnPicking="true"
                AllowAlternatingRows="false" FilterMode="FilterMode.Advanced" AllowSorting="true" PageSize="5" AllowPaging="true"
                PagerHorizontalAlign="HorizontalAlign.Left" ShowPagingSummary="true" SelectionMode="DataGridSelectionMode.Multiple" @bind-Value=@selectedEntity
                Data="@entities" Count="@dataBaseView.Entities.Count" TItem="IEntity">
        <Columns>

            @foreach (var property in dataBaseView.Type.GetProperties())
            {
                <RadzenDataGridColumn TItem="IEntity" Title="@property.Name" Sortable="true" Filterable="true" Property="@property.Name" Width="80px" TextAlign="TextAlign.Center">
                    <Template Context="entity">

                        @if (property.Name == "Id")
                        {
                            <RadzenLabel>@entity.Id</RadzenLabel>
                        }
                        else if (property.Name == "Photo")
                        {
                            @switch (entity.Id)
                            {
                                case 1:
                                    <RadzenImage class="img-fluid" Path="https://yaskravaklumba.com.ua/image/cache/catalog/mnogoletniki/geyhera/cherry-cola-1-500x500.jpg"></RadzenImage>
                                    break;
                                case 2:
                                    <RadzenImage class="img-fluid" Path="https://florium.ua/media/catalog/product/cache/2/file/9df78eab33525d08d6e5fb8d27136e95/h/e/heuchera_delta_dawn_5b_1.jpg"></RadzenImage>
                                    break;
                                case 3:
                                    <RadzenImage class="img-fluid" Path="https://img3.procvetok.com/crop/w415h415/de/1d/de1dd6218d03d6338be71b8b5b75043c.jpg"></RadzenImage>
                                    break;
                                case 4:
                                    <RadzenImage class="img-fluid" Path="http://www.heuchera.com.ua/images/info/272/Frost1111.jpg"></RadzenImage>
                                    break;
                                case 5:
                                    <RadzenImage class="img-fluid" Path="https://plantmania.ru/components/com_virtuemart/shop_image/product/2.jpg5ec145868d1f3.jpg"></RadzenImage>
                                    break;
                                case 6:
                                    <RadzenImage class="img-fluid" Path="https://florium.ua/media/catalog/product/cache/1/file/9df78eab33525d08d6e5fb8d27136e95/h/e/heuchera-silver-scrolls.jpg"></RadzenImage>
                                    break;
                                case 7:
                                    <RadzenImage class="img-fluid" Path="https://florium.ua/media/catalog/product/cache/2/file/9df78eab33525d08d6e5fb8d27136e95/6/9/6909837359_6d4666a731_z_5.jpg"></RadzenImage>
                                    break;
                                case 8:
                                    <RadzenImage class="img-fluid" Path="https://www.americanmeadows.com/media/catalog/product/h/e/heuchera_berry_smoothie_coral_bells.jpg?quality=80&bg-color=255,255,255&fit=bounds&height=&width="></RadzenImage>
                                    break;
                                case 9:
                                    <RadzenImage class="img-fluid" Path="https://fabrikacvetov.ru/uploads/product/200/277/geyhera-Electra_1_2021-01-29_20-15-06.jpg"></RadzenImage>
                                    break;
                                case 10:
                                    <RadzenImage class="img-fluid" Path="https://baumschule-nielsen.de/wp-content/uploads/2010/01/fire-chief.jpg"></RadzenImage>
                                    break;

                            }

                        }
                        else if (property.PropertyType.Name.Contains("Collection"))
                        {
                            <RadzenTextBox Value="@GetCollection(property.GetValue(entity))" Change="(newValue)=>{dataBaseView.Change(entity, property, newValue);}"></RadzenTextBox>

                        }
                        else
                        {
                            <RadzenTextBox Value="@property.GetValue(entity)?.ToString()" Change="(newValue)=>{dataBaseView.Change(entity, property, newValue);}"></RadzenTextBox>
                        }
                    </Template>
                </RadzenDataGridColumn>
            }

        </Columns>
    </RadzenDataGrid>
}



<RadzenButton Click="dataBaseView.Save">Зберегти</RadzenButton>

<RadzenButton Click="()=>{dataBaseView.Add();  ordersGrid.Reload();}">Додати</RadzenButton>

<RadzenButton Click="()=>{dataBaseView.Delete(selectedEntity); ordersGrid.Reload();}">Видалити</RadzenButton>

@code {
    RadzenDataGrid<IEntity>? ordersGrid;

    IList<IEntity> selectedEntity = new List<IEntity>();

    IEnumerable<IEntity> entities;

    protected override async Task OnInitializedAsync()
    {
        dataBaseView.PropertyChanged += async (o, a) =>
        {
            entities = null;
            entities = await Task.Run(() => dataBaseView.Entities);
            this.StateHasChanged();
        };
        entities = await Task.Run(() => dataBaseView.Entities);
    }

    private string GetCollection(object obj)
    {
        var str = string.Empty;

        var collection = obj as IEnumerable<IEntity>;

        if (collection is null)
        {
        return str;
        }
        str = string.Join(", ", collection.Select(s => s.Id));
        return str;
    }
}

